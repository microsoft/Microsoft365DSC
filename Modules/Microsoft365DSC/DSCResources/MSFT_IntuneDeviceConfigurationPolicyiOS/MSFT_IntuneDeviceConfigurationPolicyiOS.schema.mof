[ClassVersion("1.0.0.0")]
class MSFT_DeviceManagementConfigurationPolicyAssignments
{
    [Write, Description("The type of the target assignment."), ValueMap{"#microsoft.graph.groupAssignmentTarget","#microsoft.graph.allLicensedUsersAssignmentTarget","#microsoft.graph.allDevicesAssignmentTarget","#microsoft.graph.exclusionGroupAssignmentTarget","#microsoft.graph.configurationManagerCollectionAssignmentTarget"}, Values{"#microsoft.graph.groupAssignmentTarget","#microsoft.graph.allLicensedUsersAssignmentTarget","#microsoft.graph.allDevicesAssignmentTarget","#microsoft.graph.exclusionGroupAssignmentTarget","#microsoft.graph.configurationManagerCollectionAssignmentTarget"}] String dataType;
    [Write, Description("The type of filter of the target assignment i.e. Exclude or Include. Possible values are:none, include, exclude."), ValueMap{"none","include","exclude"}, Values{"none","include","exclude"}] String deviceAndAppManagementAssignmentFilterType;
    [Write, Description("The Id of the filter for the target assignment.")] String deviceAndAppManagementAssignmentFilterId;
    [Write, Description("The group Id that is the target of the assignment.")] String groupId;
    [Write, Description("The collection Id that is the target of the assignment.(ConfigMgr)")] String collectionId;
};
[ClassVersion("1.0.0")]
class MSFT_MicrosoftGraphapplistitem
{
    [Write, Description("odatatype of the item."), ValueMap{"#microsoft.graph.appleAppListItem"}, Values{"#microsoft.graph.appleAppListItem"}] String odataType;
    [Write, Description("Kiosk mode managed app id")] String appId;
    [Write, Description("Define the app store URL.")] String appStoreUrl;
    [Write, Description("Define the name of the app.")] String name;
    [Write, Description("Define the publisher of the app.")] String publisher;
};
[ClassVersion("1.0.0")]
class MSFT_MicrosoftGraphmediacontentratingaustralia
{
    [Write, Description("Movies rating selected for Australia"), ValueMap{"allAllowed","allBlocked","general","parentalGuidance","mature","agesAbove15","agesAbove18"}, Values{"allAllowed","allBlocked","general","parentalGuidance","mature","agesAbove15","agesAbove18"}] String movieRating;
    [Write, Description("TV rating selected for Australia"), ValueMap{"allAllowed","allBlocked","preschoolers","children","general","parentalGuidance","mature","agesAbove15","agesAbove15AdultViolence"}, Values{"allAllowed","allBlocked","preschoolers","children","general","parentalGuidance","mature","agesAbove15","agesAbove15AdultViolence"}] String tvRating;
};
[ClassVersion("1.0.0")]
class MSFT_MicrosoftGraphmediacontentratingcanada
{
    [Write, Description("Movies rating selected for Canada"), ValueMap{"allAllowed","allBlocked","general","parentalGuidance","agesAbove14","agesAbove18","restricted"}, Values{"allAllowed","allBlocked","general","parentalGuidance","agesAbove14","agesAbove18","restricted"}] String movieRating;
    [Write, Description("TV rating selected for Canada"), ValueMap{"allAllowed","allBlocked","children","childrenAbove8","general","parentalGuidance","agesAbove14","agesAbove18"}, Values{"allAllowed","allBlocked","children","childrenAbove8","general","parentalGuidance","agesAbove14","agesAbove18"}] String tvRating;
};
[ClassVersion("1.0.0")]
class MSFT_MicrosoftGraphmediacontentratingfrance
{
    [Write, Description("Movies rating selected for France"), ValueMap{"allAllowed","allBlocked","agesAbove10","agesAbove12","agesAbove16","agesAbove18"}, Values{"allAllowed","allBlocked","agesAbove10","agesAbove12","agesAbove16","agesAbove18"}] String movieRating;
    [Write, Description("TV rating selected for France"), ValueMap{"allAllowed","allBlocked","agesAbove10","agesAbove12","agesAbove16","agesAbove18"}, Values{"allAllowed","allBlocked","agesAbove10","agesAbove12","agesAbove16","agesAbove18"}] String tvRating;
};
[ClassVersion("1.0.0")]
class MSFT_MicrosoftGraphmediacontentratinggermany
{
    [Write, Description("Movies rating selected for Germany"), ValueMap{"allAllowed","allBlocked","general","agesAbove6","agesAbove12","agesAbove16","adults"}, Values{"allAllowed","allBlocked","general","agesAbove6","agesAbove12","agesAbove16","adults"}] String movieRating;
    [Write, Description("TV rating selected for Germany"), ValueMap{"allAllowed","allBlocked","general","agesAbove6","agesAbove12","agesAbove16","adults"}, Values{"allAllowed","allBlocked","general","agesAbove6","agesAbove12","agesAbove16","adults"}] String tvRating;
};
[ClassVersion("1.0.0")]
class MSFT_MicrosoftGraphmediacontentratingireland
{
    [Write, Description("Movies rating selected for Ireland"), ValueMap{"allAllowed","allBlocked","general","parentalGuidance","agesAbove12","agesAbove15","agesAbove16","adults"}, Values{"allAllowed","allBlocked","general","parentalGuidance","agesAbove12","agesAbove15","agesAbove16","adults"}] String movieRating;
    [Write, Description("TV rating selected for Ireland"), ValueMap{"allAllowed","allBlocked","general","children","youngAdults","parentalSupervision","mature"}, Values{"allAllowed","allBlocked","general","children","youngAdults","parentalSupervision","mature"}] String tvRating;
};
[ClassVersion("1.0.0")]
class MSFT_MicrosoftGraphmediacontentratingjapan
{
    [Write, Description("Movies rating selected for Japan"), ValueMap{"allAllowed","allBlocked","general","parentalGuidance","agesAbove15","agesAbove18"}, Values{"allAllowed","allBlocked","general","parentalGuidance","agesAbove15","agesAbove18"}] String movieRating;
    [Write, Description("TV rating selected for Japan"), ValueMap{"allAllowed","allBlocked","explicitAllowed"}, Values{"allAllowed","allBlocked","explicitAllowed"}] String tvRating;
};
[ClassVersion("1.0.0")]
class MSFT_MicrosoftGraphmediacontentratingnewzealand
{
    [Write, Description("Movies rating selected for New Zealand"), ValueMap{"allAllowed","allBlocked","general","parentalGuidance","mature","agesAbove13","agesAbove15","agesAbove16","agesAbove18","restricted","agesAbove16Restricted"}, Values{"allAllowed","allBlocked","general","parentalGuidance","mature","agesAbove13","agesAbove15","agesAbove16","agesAbove18","restricted","agesAbove16Restricted"}] String movieRating;
    [Write, Description("TV rating selected for New Zealand"), ValueMap{"allAllowed","allBlocked","general","parentalGuidance","adults"}, Values{"allAllowed","allBlocked","general","parentalGuidance","adults"}] String tvRating;
};
[ClassVersion("1.0.0")]
class MSFT_MicrosoftGraphmediacontentratingunitedkingdom
{
    [Write, Description("Movies rating selected for UK"), ValueMap{"allAllowed","allBlocked","general","universalChildren","parentalGuidance","agesAbove12Video","agesAbove12Cinema","agesAbove15","adults"}, Values{"allAllowed","allBlocked","general","universalChildren","parentalGuidance","agesAbove12Video","agesAbove12Cinema","agesAbove15","adults"}] String movieRating;
    [Write, Description("TV rating selected for UK"), ValueMap{"allAllowed","allBlocked","caution"}, Values{"allAllowed","allBlocked","caution"}] String tvRating;
};
[ClassVersion("1.0.0")]
class MSFT_MicrosoftGraphmediacontentratingunitedstates
{
    [Write, Description("Movies rating selected for USA"), ValueMap{"allAllowed","allBlocked","general","parentalGuidance","parentalGuidance13","restricted","adults"}, Values{"allAllowed","allBlocked","general","parentalGuidance","parentalGuidance13","restricted","adults"}] String movieRating;
    [Write, Description("TV rating selected for USA"), ValueMap{"allAllowed","allBlocked","childrenAll","childrenAbove7","general","parentalGuidance","childrenAbove14","adults"}, Values{"allAllowed","allBlocked","childrenAll","childrenAbove7","general","parentalGuidance","childrenAbove14","adults"}] String tvRating;
};
[ClassVersion("1.0.0")]
class MSFT_MicrosoftGraphiosnetworkusagerule
{
    [Write, Description("If set to true, corresponding managed apps will not be allowed to use cellular data at any time.")] Boolean cellularDataBlocked;
    [Write, Description("If set to true, corresponding managed apps will not be allowed to use cellular data when roaming.")] Boolean cellularDataBlockWhenRoaming;
    [Write, Description("Information about the managed apps that this rule is going to apply to."), EmbeddedInstance("MSFT_MicrosoftGraphapplistitem")] String managedApps[];
};

[ClassVersion("1.0.0.0"), FriendlyName("IntuneDeviceConfigurationPolicyIOS")]
class MSFT_IntuneDeviceConfigurationPolicyIOS : OMI_BaseResource
{
    [Write, Description("Id of the Intune policy.")] String Id;
    [Write, Description("Description of the Intune policy.")] String Description;
    [Write, Description("Display name of the Intune policy.")] String DisplayName;
    [Write, Description("Indicates whether or not to allow account modification when the device is in supervised mode.")] Boolean AccountBlockModification;
    [Write, Description("Activation Lock makes it harder for a lost or stolen device to be reactivated.")] Boolean ActivationLockAllowWhenSupervised;
    [Write, Description("Indicates whether or not to allow AirDrop when the device is in supervised mode.")] Boolean AirDropBlocked;
    [Write, Description("Force AirDrop to be considered an unmanaged drop target.")] Boolean AirDropForceUnmanagedDropTarget;
    [Write, Description("Force requiring a pairing password for outgoing AirPlay requests.")] Boolean AirPlayForcePairingPasswordForOutgoingRequests;
    [Write, Description("Blocks keychain storage of username and password for outgoing AirPrint request.")] Boolean AirPrintBlockCredentialsStorage;
    [Write, Description("Blocks AirPrint request.")] Boolean AirPrintBlocked;
    [Write, Description("Blocking prevents malicious AirPrint Bluetooth beacons phishing for network traffic.")] Boolean AirPrintBlockiBeaconDiscovery;
    [Write, Description("Forces trusted certificates for TLS printing communication")] Boolean AirPrintForceTrustedTLS;
    [Write, Description("Block app clips.")] Boolean AppClipsBlocked;
    [Write, Description("Block Apple News")] Boolean AppleNewsBlocked;
    [Write, Description("Block Apple PersonalizedAdsBlocked")] Boolean ApplePersonalizedAdsBlocked;
    [Write, Description("Indicates whether or not to allow Apple Watch pairing when the device is in supervised mode (iOS 9.0 and later).")] Boolean AppleWatchBlockPairing;
    [Write, Description("Force paired Apple watch to use wrist detection.")] Boolean AppleWatchForceWristDetection;
    [Write, Description("Block app removal.")] Boolean AppRemovalBlocked;
    [Write, Description("Apps you add to this list and assign to a device can lock the device to run only that app once launched, or lock the device while a certain action is running (for example, taking a test). Once the action is complete, or you remove the restriction, the device returns to its normal state."), EmbeddedInstance("MSFT_MicrosoftGraphapplistitem")] String AppsSingleAppModeList[];
    [Write, Description("Blocks automatic downloading of apps purchased on other devices. Does not affect updates to existing apps.")] Boolean AppStoreBlockAutomaticDownloads;
    [Write, Description("For supervised devices as of iOS 13.0.")] Boolean AppStoreBlocked;
    [Write, Description("Block AppStore in-app purchases.")] Boolean AppStoreBlockInAppPurchases;
    [Write, Description("Block App Store from Home Screen. Users may continue to use iTunes or Apple Configurator to install or update apps.")] Boolean AppStoreBlockUIAppInstallation;
    [Write, Description("Users must enter Apple ID password for each in-app and iTunes purchase.")] Boolean AppStoreRequirePassword;
    [Write, Description("Enter the iTunes App Store URL of the app you want. For example, to specify the Microsoft Work Folders app for iOS, enter https://itunes.apple.com/us/app/work-folders/id950878067?mt=8. To find the URL of an app, use a search engine to locate the store page. For example, to find the Work Folders app, you could search Microsoft Work Folders ITunes."), EmbeddedInstance("MSFT_MicrosoftGraphapplistitem")] String AppsVisibilityList[];
    [Write, Description("Set whether the list is a list of apps to hide or a list of apps to make visible."), ValueMap{"none","appsInListCompliant","appsNotInListCompliant"}, Values{"none","appsInListCompliant","appsNotInListCompliant"}] String AppsVisibilityListType;
    [Write, Description("Require Touch ID or Face ID before passwords or credit card information can be auto filled in Safari and Apps. Available with iOS 12.0 and later.")] Boolean AutoFillForceAuthentication;
    [Write, Description("Block auto unlock.")] Boolean AutoUnlockBlocked;
    [Write, Description("Blocking disables the ability to remove system apps from the device.")] Boolean BlockSystemAppRemoval;
    [Write, Description("Block modification of Bluetooth settings. To use this setting, the device must be in supervised mode (iOS 10.0+).")] Boolean BluetoothBlockModification;
    [Write, Description("Indicates whether or not to block the user from accessing the camera of the device. Requires a supervised device for iOS 13 and later.")] Boolean CameraBlocked;
    [Write, Description("Block data roaming over the cellular network. This won't show in the device's management profile, but a block will be enforced for data roaming every time the device checks in (typically every 8 hours).")] Boolean CellularBlockDataRoaming;
    [Write, Description("Block global background fetch while roaming over the cellular network.")] Boolean CellularBlockGlobalBackgroundFetchWhileRoaming;
    [Write, Description("Block changes to app cellular data usage settings.")] Boolean CellularBlockPerAppDataModification;
    [Write, Description("This value is available only with certain carriers. This won't show in the device's management profile, but a block will be enforced for personal hotspot every time the device checks in (typically every 8 hours). Block modification of personal hotspot in addition to this setting to ensure personal hotspot will always be blocked.")] Boolean CellularBlockPersonalHotspot;
    [Write, Description("For devices running iOS 12.2 and later. Users can't turn Personal Hotspot on or off. If you block this setting and block Personal Hotspot, Personal Hotspot will be turned off.")] Boolean CellularBlockPersonalHotspotModification;
    [Write, Description("Indicates whether or not to allow users to change the settings of the cellular plan on a supervised device.")] Boolean CellularBlockPlanModification;
    [Write, Description("Block voice roaming over the cellular network.")] Boolean CellularBlockVoiceRoaming;
    [Write, Description("Block untrusted Transport Layer Security (TLS) certificates.")] Boolean CertificatesBlockUntrustedTlsCertificates;
    [Write, Description("Block remote screen observation by Classroom app. To use this setting, the device must be in supervised mode (iOS 9.3+).")] Boolean ClassroomAppBlockRemoteScreenObservation;
    [Write, Description("Student devices enrolled in a class via the Classroom app will automatically give permission to that course's teacher to silently observe the student's screen.")] Boolean ClassroomAppForceUnpromptedScreenObservation;
    [Write, Description("Students can join a class without prompting the teacher.")] Boolean ClassroomForceAutomaticallyJoinClasses;
    [Write, Description("Requires a student enrolled in an unmanaged course via Classroom to request permission from the teacher when attempting to leave the course. Only available in iOS 11.3+")] Boolean ClassroomForceRequestPermissionToLeaveClasses;
    [Write, Description("Teachers can lock an app open or lock the device without first prompting the user.")] Boolean ClassroomForceUnpromptedAppAndDeviceLock;
    [Write, Description("Device compliance can be viewed in the Restricted Apps Compliance report."), ValueMap{"none","appsInListCompliant","appsNotInListCompliant"}, Values{"none","appsInListCompliant","appsNotInListCompliant"}] String CompliantAppListType;
    [Write, Description("Enter the iTunes App Store URL of the app you want. For example, to specify the Microsoft Work Folders app for iOS, enter https://itunes.apple.com/us/app/work-folders/id950878067?mt=8. To find the URL of an app, use a search engine to locate the store page. For example, to find the Work Folders app, you could search Microsoft Work Folders ITunes."), EmbeddedInstance("MSFT_MicrosoftGraphapplistitem")] String CompliantAppsList[];
    [Write, Description("Indicates whether or not to block the user from installing configuration profiles and certificates interactively when the device is in supervised mode.")] Boolean ConfigurationProfileBlockChanges;
    [Write, Description("Users can sync and add their managed contacts (including business and corporate ones) to an unmanaged app, such as the device's built-in contacts app.")] Boolean ContactsAllowManagedToUnmanagedWrite;
    [Write, Description("An unmanaged app, such as the device's built-in contacts app, can access contact info in a managed app, such as Outlook.")] Boolean ContactsAllowUnmanagedToManagedRead;
    [Write, Description("QuickPath enables continuous input on the device keyboard. Available for iOS/iPadOS 13.0 and later.")] Boolean ContinuousPathKeyboardBlocked;
    [Write, Description("Forces device to Set Date & Time Automatically. The device's time zone will only be updated when the device has cellular connections or wifi with location services enabled.")] Boolean DateAndTimeForceSetAutomatically;
    [Write, Description("Indicates whether or not to block definition lookup when the device is in supervised mode (iOS 8.1.3 and later ).")] Boolean DefinitionLookupBlocked;
    [Write, Description("On iOS 12.0 and later, this blocks users from setting their own Screen Time settings, which includes device restrictions. On iOS 11.4.1 and earlier, this blocks the user from enabling restrictions in the device settings. The blocking effect is the same on any supervised iOS device.")] Boolean DeviceBlockEnableRestrictions;
    [Write, Description("Block the use of the erase all content and settings option on the device.")] Boolean DeviceBlockEraseContentAndSettings;
    [Write, Description("Indicates whether or not to allow device name modification when the device is in supervised mode (iOS 9.0 and later).")] Boolean DeviceBlockNameModification;
    [Write, Description("Block the device from sending diagnostic and usage telemetry data.")] Boolean DiagnosticDataBlockSubmission;
    [Write, Description("Block the modification of the diagnostic submission and app analytics settings in the Diagnostics and Usage pane in Settings. To use this setting, the device must be in supervised mode (iOS 9.3.2+).")] Boolean DiagnosticDataBlockSubmissionModification;
    [Write, Description("Indicates whether or not to block the user from viewing managed documents in unmanaged apps.")] Boolean DocumentsBlockManagedDocumentsInUnmanagedApps;
    [Write, Description("Indicates whether or not to block the user from viewing unmanaged documents in managed apps.")] Boolean DocumentsBlockUnmanagedDocumentsInManagedApps;
    [Write, Description("Emails that the user sends or receives which don't match the domains you specify here will be marked as untrusted.")] String EmailInDomainSuffixes[];
    [Write, Description("Removes the Trust Enterprise Developer button in Settings->General->Profiles & Device Management.")] Boolean EnterpriseAppBlockTrust;
    [Write, Description("Block the changing of enterprise app trust settings.")] Boolean EnterpriseAppBlockTrustModification;
    [Write, Description("Indicates whether or not to backup enterprise book.")] Boolean EnterpriseBookBlockBackup;
    [Write, Description("Indicates whether or not to sync enterprise book metadata.")] Boolean EnterpriseBookBlockMetadataSync;
    [Write, Description("Indicates whether or not to allow the addition or removal of cellular plans on the eSIM of a supervised device.")] Boolean EsimBlockModification;
    [Write, Description("Indicates whether or not to block the user from using FaceTime. Requires a supervised device for iOS 13 and later.")] Boolean FaceTimeBlocked;
    [Write, Description("Using the Server Message Block (SMB) protocol, devices can access files or other resources on a network server. Available for devices running iOS and iPadOS, versions 13.0 and later.")] Boolean FilesNetworkDriveAccessBlocked;
    [Write, Description("Devices with access can connect to and open files on a USB drive. Available for devices running iOS and iPadOS, versions 13.0 and later.")] Boolean FilesUsbDriveAccessBlocked;
    [Write, Description("A Find My app feature. Available for iOS/iPadOS 13.0 and later.")] Boolean FindMyDeviceInFindMyAppBlocked;
    [Write, Description("Block changes to the Find My Friends app settings.")] Boolean FindMyFriendsBlocked;
    [Write, Description("A Find My app feature. Used to locate family and friends from an Apple device or iCloud.com. Available for iOS/iPadOS 13.0 and later.")] Boolean FindMyFriendsInFindMyAppBlocked;
    [Write, Description("Indicates whether or not to block the user from using Game Center when the device is in supervised mode.")] Boolean GameCenterBlocked;
    [Write, Description("Block adding Game Center friends. For supervised devices as of iOS 13.0.")] Boolean GamingBlockGameCenterFriends;
    [Write, Description("For supervised devices as of iOS 13.0.")] Boolean GamingBlockMultiplayer;
    [Write, Description("Host pairing allows you to control which devices the device can pair with.")] Boolean HostPairingBlocked;
    [Write, Description("Indicates whether or not to block the user from using the iBooks Store when the device is in supervised mode.")] Boolean IBooksStoreBlocked;
    [Write, Description("User will not be able to download media from the iBook store that has been tagged as erotica.")] Boolean IBooksStoreBlockErotica;
    [Write, Description("Handoff lets users start work on one iOS device, and continue it on another MacOS or iOS device.")] Boolean ICloudBlockActivityContinuation;
    [Write, Description("Block backing up device to iCloud.")] Boolean ICloudBlockBackup;
    [Write, Description("Blocks iCloud from syncing documents and data.")] Boolean ICloudBlockDocumentSync;
    [Write, Description("Block managed apps from syncing to cloud.")] Boolean ICloudBlockManagedAppsSync;
    [Write, Description("Any photos not fully downloaded from iCloud Photo Library to device will be removed from local storage.")] Boolean ICloudBlockPhotoLibrary;
    [Write, Description("Block photo stream syncing to iCloud.")] Boolean ICloudBlockPhotoStreamSync;
    [Write, Description("Block shared photo streaming. Blocking can cause data loss.")] Boolean ICloudBlockSharedPhotoStream;
    [Write, Description("Block iCloud private relay.")] Boolean ICloudPrivateRelayBlocked;
    [Write, Description("Require encryption on device backup.")] Boolean ICloudRequireEncryptedBackup;
    [Write, Description("Block iTunes.")] Boolean ITunesBlocked;
    [Write, Description("Block explicit iTunes music, podcast, and news content from iTunes. For supervised devices as of 13.0.")] Boolean ITunesBlockExplicitContent;
    [Write, Description("Block Music service. If true, Music app reverts to classic mode and Music service is disabled.")] Boolean ITunesBlockMusicService;
    [Write, Description("Indicates whether or not to block the user from using iTunes Radio when the device is in supervised mode (iOS 9.3 and later).")] Boolean ITunesBlockRadio;
    [Write, Description("Indicates whether or not to block keyboard auto-correction when the device is in supervised mode (iOS 8.1.3 and later).")] Boolean KeyboardBlockAutoCorrect;
    [Write, Description("Indicates whether or not to block the user from using dictation input when the device is in supervised mode.")] Boolean KeyboardBlockDictation;
    [Write, Description("Indicates whether or not to block predictive keyboards when device is in supervised mode (iOS 8.1.3 and later).")] Boolean KeyboardBlockPredictive;
    [Write, Description("Indicates whether or not to block keyboard shortcuts when the device is in supervised mode (iOS 9.0 and later).")] Boolean KeyboardBlockShortcuts;
    [Write, Description("Indicates whether or not to block keyboard spell-checking when the device is in supervised mode (iOS 8.1.3 and later).")] Boolean KeyboardBlockSpellCheck;
    [Write, Description("Disables syncing credentials stored in the Keychain to iCloud.")] Boolean KeychainBlockCloudSync;
    [Write, Description("Indicates whether or not to allow assistive speak while in kiosk mode.")] Boolean KioskModeAllowAssistiveSpeak;
    [Write, Description("Users can turn AssistiveTouch on or off.")] Boolean KioskModeAllowAssistiveTouchSettings;
    [Write, Description("Kiosk mode allow auto lock")] Boolean KioskModeAllowAutoLock;
    [Write, Description("Users can turn invert colors on or off.")] Boolean KioskModeAllowColorInversionSettings;
    [Write, Description("Kiosk mode allow ringer switch")] Boolean KioskModeAllowRingerSwitch;
    [Write, Description("Kiosk mode allow screen rotation")] Boolean KioskModeAllowScreenRotation;
    [Write, Description("Kiosk mode allow sleep button")] Boolean KioskModeAllowSleepButton;
    [Write, Description("Kiosk mode allow touchscreen")] Boolean KioskModeAllowTouchscreen;
    [Write, Description("Indicates whether or not to allow the user to toggle voice control in kiosk mode.")] Boolean KioskModeAllowVoiceControlModification;
    [Write, Description("Users can turn VoiceOver on or off.")] Boolean KioskModeAllowVoiceOverSettings;
    [Write, Description("Kiosk mode allow volume buttons")] Boolean KioskModeAllowVolumeButtons;
    [Write, Description("Users can turn zoom on or off.")] Boolean KioskModeAllowZoomSettings;
    [Write, Description("URL of app for kiosk mode, e.g. https://itunes.apple.com/us/app/work-folders/id950878067?mt=8")] String KioskModeAppStoreUrl;
    [Write, Description("Indicates type of app in kiosk mode."), ValueMap{"notConfigured","appStoreApp","managedApp","builtInApp"}, Values{"notConfigured","appStoreApp","managedApp","builtInApp"}] String KioskModeAppType;
    [Write, Description("Indicates whether or not to block the auto-lock while in Kiosk Mode.")] Boolean KioskModeBlockAutoLock;
    [Write, Description("Indicates whether or not to block the ringer switch while in Kiosk Mode.")] Boolean KioskModeBlockRingerSwitch;
    [Write, Description("Indicates whether or not to block the screen rotation while in Kiosk Mode.")] Boolean KioskModeBlockScreenRotation;
    [Write, Description("Indicates whether or not to block the sleep button while in Kiosk Mode.")] Boolean KioskModeBlockSleepButton;
    [Write, Description("Indicates whether or not to block the touchscreen while in Kiosk Mode.")] Boolean KioskModeBlockTouchscreen;
    [Write, Description("Indicates whether or not to block the volume buttons while in Kiosk Mode.")] Boolean KioskModeBlockVolumeButtons;
    [Write, Description("To see a list of bundle IDs for common built-in iOS apps, see the Intune documentation.")] String KioskModeBuiltInAppId;
    [Write, Description("Indicates whether or not to enable the voice control while in Kiosk Mode.")] Boolean KioskModeEnableVoiceControl;
    [Write, Description("Add managed Intune apps from the Software Node.")] String KioskModeManagedAppId;
    [Write, Description("Indicates whether or not to enforce assistive touch while in Kiosk Mode.")] Boolean KioskModeRequireAssistiveTouch;
    [Write, Description("Indicates whether or not to enforce color inversion while in Kiosk Mode.")] Boolean KioskModeRequireColorInversion;
    [Write, Description("Indicates whether or not to enforce mono audio while in Kiosk Mode.")] Boolean KioskModeRequireMonoAudio;
    [Write, Description("Indicates whether or not to enforce voice control while in Kiosk Mode.")] Boolean KioskModeRequireVoiceOver;
    [Write, Description("Indicates whether or not to enforce zoom while in Kiosk Mode.")] Boolean KioskModeRequireZoom;
    [Write, Description("Indicates whether or not to block the user from using control center on the lock screen.")] Boolean LockScreenBlockControlCenter;
    [Write, Description("Indicates whether or not to block the user from using the notification view on the lock screen.")] Boolean LockScreenBlockNotificationView;
    [Write, Description("Indicates whether or not to block the user from using passbook when the device is locked.")] Boolean LockScreenBlockPassbook;
    [Write, Description("Indicates whether or not to block the user from using the Today View on the lock screen.")] Boolean LockScreenBlockTodayView;
    [Write, Description("Indicates whether or not to enforce managed pasteboard.")] Boolean ManagedPasteboardRequired;
    [Write, Description("Media content rating settings for apps."), ValueMap{"allAllowed","allBlocked","agesAbove4","agesAbove9","agesAbove12","agesAbove17"}, Values{"allAllowed","allBlocked","agesAbove4","agesAbove9","agesAbove12","agesAbove17"}] String MediaContentRatingApps;
    [Write, Description("Media content rating settings for Australia"), EmbeddedInstance("MSFT_MicrosoftGraphmediacontentratingaustralia")] String MediaContentRatingAustralia;
    [Write, Description("Media content rating settings for Canada"), EmbeddedInstance("MSFT_MicrosoftGraphmediacontentratingcanada")] String MediaContentRatingCanada;
    [Write, Description("Media content rating settings for France"), EmbeddedInstance("MSFT_MicrosoftGraphmediacontentratingfrance")] String MediaContentRatingFrance;
    [Write, Description("Media content rating settings for Germany"), EmbeddedInstance("MSFT_MicrosoftGraphmediacontentratinggermany")] String MediaContentRatingGermany;
    [Write, Description("Media content rating settings for Ireland"), EmbeddedInstance("MSFT_MicrosoftGraphmediacontentratingireland")] String MediaContentRatingIreland;
    [Write, Description("Media content rating settings for Japan"), EmbeddedInstance("MSFT_MicrosoftGraphmediacontentratingjapan")] String MediaContentRatingJapan;
    [Write, Description("Media content rating settings for New Zealand"), EmbeddedInstance("MSFT_MicrosoftGraphmediacontentratingnewzealand")] String MediaContentRatingNewZealand;
    [Write, Description("Media content rating settings for United Kingdom"), EmbeddedInstance("MSFT_MicrosoftGraphmediacontentratingunitedkingdom")] String MediaContentRatingUnitedKingdom;
    [Write, Description("Media content rating settings for United States"), EmbeddedInstance("MSFT_MicrosoftGraphmediacontentratingunitedstates")] String MediaContentRatingUnitedStates;
    [Write, Description("Indicates whether or not to block the user from using the Messages app on the supervised device.")] Boolean MessagesBlocked;
    [Write, Description("If you don't add any managed apps, the configured settings will apply to all managed apps by default. If you add specific managed apps, the configured settings will apply to only those apps."), EmbeddedInstance("MSFT_MicrosoftGraphiosnetworkusagerule")] String NetworkUsageRules[];
    [Write, Description("Indicates whether or not to block the user from using nfc on the supervised device.")] Boolean NfcBlocked;
    [Write, Description("Indicates whether or not to allow notifications settings modification (iOS 9.3 and later).")] Boolean NotificationsBlockSettingsModification;
    [Write, Description("Indicates whether or not to enforce on device only dictation.")] Boolean OnDeviceOnlyDictationForced;
    [Write, Description("Indicates whether or not to enforce on device only translation.")] Boolean OnDeviceOnlyTranslationForced;
    [Write, Description("Block users from adding, changing, or removing fingerprints and faces. Face ID is avaliable in iOS 11.0 and later.")] Boolean PasscodeBlockFingerprintModification;
    [Write, Description("Face ID is avaliable on iOS 11.0 and later.")] Boolean PasscodeBlockFingerprintUnlock;
    [Write, Description("Block passcode from being added, changed or removed. Changes to passcode restrictions will be ignored on supervised devices after blocking passcode modification.")] Boolean PasscodeBlockModification;
    [Write, Description("Block simple password sequences, such as 1234 or 1111.")] Boolean PasscodeBlockSimple;
    [Write, Description("Number of days until device password must be changed. (1-65535)")] UInt32 PasscodeExpirationDays;
    [Write, Description("Minimum number (0-4) of non-alphanumeric characters, such as #, %, !, etc., required in the password. The default value is 0.")] UInt32 PasscodeMinimumCharacterSetCount;
    [Write, Description("Minimum number of digits or characters in password. (4-14)")] UInt32 PasscodeMinimumLength;
    [Write, Description("Set to 0 to require a password immediately. There is no maximum number of minutes, and this number overrides the number currently set on the device. (This compliance check is supported for devices with OS versions iOS 8.0 and above)")] UInt32 PasscodeMinutesOfInactivityBeforeLock;
    [Write, Description("Set to 0 to use the device's minimum possible value. This number (0-60) overrides the number currently set on the device. If set to Immediately, devices will use the minimum possible value per device.")] UInt32 PasscodeMinutesOfInactivityBeforeScreenTimeout;
    [Write, Description("Number of new passwords that must be used until an old one can be reused. (1-24)")] UInt32 PasscodePreviousPasscodeBlockCount;
    [Write, Description("In addition to requiring a password on all devices, this setting enforces a non-simple, 6-digit password requirement (regardless of other password settings you configure) on devices that are enrolled with Apple user enrollment.")] Boolean PasscodeRequired;
    [Write, Description("Type of passcode that is required."), ValueMap{"deviceDefault","alphanumeric","numeric"}, Values{"deviceDefault","alphanumeric","numeric"}] String PasscodeRequiredType;
    [Write, Description("Number of consecutive times an incorrect password can be entered before device is wiped of all data. (2-11)")] UInt32 PasscodeSignInFailureCountBeforeWipe;
    [Write, Description("Indicates whether or not to block AirDrop password sharing")] Boolean PasswordBlockAirDropSharing;
    [Write, Description("Indicates whether or not to block password autofill.")] Boolean PasswordBlockAutoFill;
    [Write, Description("Indicates whether or not to block password proximity requests.")] Boolean PasswordBlockProximityRequests;
    [Write, Description("Allows your users to receive software updates without connecting their devices to a computer")] Boolean PkiBlockOTAUpdates;
    [Write, Description("Indicates whether or not to block podcasts.")] Boolean PodcastsBlocked;
    [Write, Description("Disables device advertising identifier")] Boolean PrivacyForceLimitAdTracking;
    [Write, Description("Block user's from using their Apple devices to set up and configure other Apple devices.")] Boolean ProximityBlockSetupToNewDevice;
    [Write, Description("Indicates whether or not to block Safari autofill.")] Boolean SafariBlockAutofill;
    [Write, Description("Indicates whether or not to block Safari. For supervised devices as of iOS 13.0.")] Boolean SafariBlocked;
    [Write, Description("Indicates whether or not to block javascript in Safari.")] Boolean SafariBlockJavaScript;
    [Write, Description("Indicates whether or not to block popups on Safari.")] Boolean SafariBlockPopups;
    [Write, Description("Cookie settings for Safari."), ValueMap{"browserDefault","blockAlways","allowCurrentWebSite","allowFromWebsitesVisited","allowAlways"}, Values{"browserDefault","blockAlways","allowCurrentWebSite","allowFromWebsitesVisited","allowAlways"}] String SafariCookieSettings;
    [Write, Description("Documents downloaded from the URLs you specify here will be considered managed (Safari only).")] String SafariManagedDomains[];
    [Write, Description("Users can save passwords in Safari only from URLs matching the patterns you specify here. To use this setting, the device must be in supervised mode and not configured for multiple users. (iOS 9.3+)")] String SafariPasswordAutoFillDomains[];
    [Write, Description("Indicates whether or not to require fraud warning in Safari.")] Boolean SafariRequireFraudWarning;
    [Write, Description("Indicates whether or not to block the user from taking Screenshots")] Boolean ScreenCaptureBlocked;
    [Write, Description("Indicates whether or not to block temporary sessions on shared devices.")] Boolean SharedDeviceBlockTemporarySessions;
    [Write, Description("Indicates whether or not to block Siri.")] Boolean SiriBlocked;
    [Write, Description("Indicates whether or not to block Siri when locked.")] Boolean SiriBlockedWhenLocked;
    [Write, Description("Block Siri from querying user-generated content from the internet.")] Boolean SiriBlockUserGeneratedContent;
    [Write, Description("Prevents Siri from dictating, or speaking profane language.")] Boolean SiriRequireProfanityFilter;
    [Write, Description("Delay the user's software update for this many days. The maximum is 90 days. (1-90)")] UInt32 SoftwareUpdatesEnforcedDelayInDays;
    [Write, Description("Delay user visibility of Software Updates. This does not impact any scheduled updates. It represents days before software updates are visible to end users after release.")] Boolean SoftwareUpdatesForceDelayed;
    [Write, Description("Blocks Spotlight from returning any results from an Internet search.")] Boolean SpotlightBlockInternetResults;
    [Write, Description("Allow users to boot devices into recovery mode with unpaired devices. Available for devices running iOS and iPadOS versions 14.5 and later.")] Boolean UnpairedExternalBootToRecoveryAllowed;
    [Write, Description("Blocks USB Restricted mode. USB Restricted mode blocks USB accessories from exchanging data with a device that has been locked over an hour.")] Boolean UsbRestrictedModeBlocked;
    [Write, Description("Indicates whether or not to block voice dialing.")] Boolean VoiceDialingBlocked;
    [Write, Description("Blocks the creation of VPN configurations")] Boolean VpnBlockCreation;
    [Write, Description("Block wallpaper from being changed.")] Boolean WallpaperBlockModification;
    [Write, Description("Force the device to use only Wi-Fi networks set up through configuration profiles.")] Boolean WiFiConnectOnlyToConfiguredNetworks;
    [Write, Description("Require devices to use Wi-Fi networks set up via configuration profiles. Available for devices running iOS and iPadOS versions 14.5 and later.")] Boolean WiFiConnectToAllowedNetworksOnlyForced;
    [Write, Description("Wi-Fi can't be turned off in the Settings app or in the Control Center, even when the device is in airplane mode. Available for iOS/iPadOS 13.0 and later.")] Boolean WifiPowerOnForced;
    [Write, Description("Represents the assignment to the Intune policy."), EmbeddedInstance("MSFT_DeviceManagementConfigurationPolicyAssignments")] String Assignments[];
    [Write, Description("Present ensures the policy exists, absent ensures it is removed."), ValueMap{"Present","Absent"}, Values{"Present","Absent"}] string Ensure;
    [Write, Description("Credentials of the Intune Admin"), EmbeddedInstance("MSFT_Credential")] string Credential;
    [Write, Description("Id of the Azure Active Directory application to authenticate with.")] String ApplicationId;
    [Write, Description("Id of the Azure Active Directory tenant used for authentication.")] String TenantId;
    [Write, Description("Secret of the Azure Active Directory tenant used for authentication."), EmbeddedInstance("MSFT_Credential")] String ApplicationSecret;
    [Write, Description("Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication.")] String CertificateThumbprint;
	[Write, Description("Managed ID being used for authentication.")] Boolean ManagedIdentity;
};
