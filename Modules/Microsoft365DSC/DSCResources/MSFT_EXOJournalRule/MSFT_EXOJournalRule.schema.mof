
[ClassVersion("1.0.0.0"), FriendlyName("EXOJournalRule")]
class MSFT_EXOJournalRule : OMI_BaseResource
{
    [Key, Description("Name of the Journal Rule")] String Name;
    [Key, Description("The JournalEmailAddress parameter specifies a recipient object to which journal reports are sent. You can use any value that uniquely identifies the recipient.")] String JournalEmailAddress;
    [Write, Description("The Recipient parameter specifies the SMTP address of a mailbox, contact, or distribution group to journal. If you specify a distribution group, all recipients in that distribution group are journaled. All messages sent to or from a recipient are journaled.")] String Recipient;
    [Write, Description("Specifies whether the Journal Rule is enabled or not.")] Boolean Enabled;
    [Write, Description("The Scope parameter specifies the scope of email messages to which the journal rule is applied"), ValueMap{"Global","Internal","External"}, Values{"Global","Internal","External"}] String RuleScope;
    [Write, Description("Present ensures the rule exists, Absent that it does not."), ValueMap{"Present","Absent"}, Values{"Present","Absent"}] String Ensure;
    [Write, Description("Credentials of the Exchange Global Admin"), EmbeddedInstance("MSFT_Credential")] string Credential;
    [Write, Description("Id of the Azure Active Directory application to authenticate with.")] String ApplicationId;
    [Write, Description("Id of the Azure Active Directory tenant used for authentication.")] String TenantId;
    [Write, Description("Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication.")] String CertificateThumbprint;
    [Write, Description("Username can be made up to anything but password will be used for CertificatePassword"), EmbeddedInstance("MSFT_Credential")] String CertificatePassword;
    [Write, Description("Path to certificate used in service principal usually a PFX file.")] String CertificatePath;
    [Write, Description("Managed ID being used for authentication.")] Boolean ManagedIdentity;
};
