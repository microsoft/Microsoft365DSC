[ClassVersion("1.0.0.0"), FriendlyName("EXOTransportConfig")]
class MSFT_EXOTransportConfig : OMI_BaseResource
{
    [Key, Description("Specifies the resource is a single instance, the value must be 'Yes'."), ValueMap{"Yes"}, Values{"Yes"}] String IsSingleInstance;
    [Write, Description("The AddressBookPolicyRoutingEnabled parameter controls how recipients are resolved in an organization that uses address book policies to create separate virtual organizations within the same Exchange organization.")] Boolean AddressBookPolicyRoutingEnabled;
    [Write, Description("Allow legacy TLS clients")] Boolean AllowLegacyTLSClients;
    [Write, Description("The ClearCategories parameter keeps or removes Microsoft Outlook message categories during content conversion.")] Boolean ClearCategories;
    [Write, Description("The ConvertDisclaimerWrapperToEml parameter specifies whether the original message will be added as a TNEF attachment or a regular EML attachment to a disclaimer.")] Boolean ConvertDisclaimerWrapperToEml;
    [Write, Description("The DSNConversionMode parameter controls how Exchange handles delivery status notifications that are generated by earlier versions of Exchange or other messaging systems.")] String DSNConversionMode;
    [Write, Description("The ExternalDelayDsnEnabled parameter specifies whether a delay delivery status notification (DSN) message should be created for external messages that couldn't be immediately delivered. ")] Boolean ExternalDelayDsnEnabled;
    [Write, Description("The ExternalDsnDefaultLanguage parameter specifies which Exchange server language should be used by default when you create external DSN messages.")] String ExternalDsnDefaultLanguage;
    [Write, Description("The ExternalDsnLanguageDetectionEnabled parameter specifies whether the server should try to send an external DSN message in the same language as the original message that generated the notification.")] Boolean ExternalDsnLanguageDetectionEnabled;
    [Write, Description("The ExternalDsnReportingAuthority parameter specifies the domain in the machine-readable part of external DSN messages. ")] String ExternalDsnReportingAuthority;
    [Write, Description("The ExternalDsnSendHtml parameter specifies whether external DSN messages should be HTML or plain text.")] Boolean ExternalDsnSendHtml;
    [Write, Description("The ExternalPostmasterAddress parameter specifies the email address in the From header field of an external DSN message.")] String ExternalPostmasterAddress;
    [Write, Description("The HeaderPromotionModeSetting parameter specifies whether named properties are created for custom X-headers on messages received.")] String HeaderPromotionModeSetting;
    [Write, Description("The InternalDelayDsnEnabled parameter specifies whether a delay DSN message should be created for messages sent to or from recipients or senders in the same Exchange organization that couldn't be immediately delivered.")] Boolean InternalDelayDsnEnabled;
    [Write, Description("The InternalDsnDefaultLanguage parameter specifies which Exchange server language should be used by default when you create internal DSN messages.")] String InternalDsnDefaultLanguage;
    [Write, Description("The InternalDsnLanguageDetectionEnabled parameter specifies whether the server should try to send an internal DSN message in the same language as the original message that generated the notification.")] Boolean InternalDsnLanguageDetectionEnabled;
    [Write, Description("The InternalDsnReportingAuthority parameter specifies the domain in the machine-readable part of internal DSN messages.")] String InternalDsnReportingAuthority;
    [Write, Description("The InternalDsnSendHtml parameter specifies whether internal DSN messages should be HTML or plain text.")] Boolean InternalDsnSendHtml;
    [Write, Description("The JournalMessageExpirationDays parameter extends the number of days that undeliverable journal reports are queued before they expire.")] SInt32 JournalMessageExpirationDays;
    [Write, Description("The JournalingReportNdrTo parameter specifies the email address to which journal reports are sent if the journaling mailbox is unavailable.")] String JournalingReportNdrTo;
    [Write, Description("The MaxRecipientEnvelopeLimit parameter specifies the maximum number of recipients in a message.")] String MaxRecipientEnvelopeLimit;
    [Write, Description("Reply all storm block duration hours.")] SInt32 ReplyAllStormBlockDurationHours;
    [Write, Description("Reply all storm detection minimum recipients.")] SInt32 ReplyAllStormDetectionMinimumRecipients;
    [Write, Description("Reply all storm detection minimum replies.")] SInt32 ReplyAllStormDetectionMinimumReplies;
    [Write, Description("Reply all storm protection enabled.")] Boolean ReplyAllStormProtectionEnabled;
    [Write, Description("The Rfc2231EncodingEnabled parameter specifies whether the RFC 2231 encoding of MIME parameters for outbound messages is enabled in your organization.")] Boolean Rfc2231EncodingEnabled;
    [Write, Description("The SmtpClientAuthenticationDisabled parameter specifies whether to disable authenticated SMTP (SMTP AUTH) for the whole organization.")] Boolean SmtpClientAuthenticationDisabled;
    [Write, Description("Credentials of the Exchange Global Admin"), EmbeddedInstance("MSFT_Credential")] string Credential;
    [Write, Description("Id of the Azure Active Directory application to authenticate with.")] String ApplicationId;
    [Write, Description("Id of the Azure Active Directory tenant used for authentication.")] String TenantId;
    [Write, Description("Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication.")] String CertificateThumbprint;
    [Write, Description("Username can be made up to anything but password will be used for CertificatePassword"), EmbeddedInstance("MSFT_Credential")] String CertificatePassword;
    [Write, Description("Path to certificate used in service principal usually a PFX file.")] String CertificatePath;
    [Write, Description("Managed ID being used for authentication.")] Boolean ManagedIdentity;
};
