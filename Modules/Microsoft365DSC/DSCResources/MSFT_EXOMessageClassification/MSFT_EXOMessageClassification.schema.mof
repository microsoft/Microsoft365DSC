[ClassVersion("1.0.0.0"), FriendlyName("EXOMessageClassification")]
class MSFT_EXOMessageClassification : OMI_BaseResource
{
    [Key, Description("The Identity parameter specifies the OME Configuration policy that you want to modify.")] String Identity;
    [Write, Description("The ClassificationID parameter specifies the classification ID (GUID) of an existing message classification that you want to import and use in your Exchange organization.")] String ClassificationID ;
    [Write, Description("The DisplayName parameter specifies the title of the message classification that's displayed in Outlook and selected by users.")] String DisplayName;
    [Write, Description("The DisplayPrecedence parameter specifies the relative precedence of the message classification to other message classifications that may be applied to a specified message."), ValueMap{"Highest","Higher","High","MediumHigh","Medium","MediumLow","Low","Lower","Lowest"}, Values{"Highest","Higher","High","MediumHigh","Medium","MediumLow","Low","Lower","Lowest"}] String DisplayPrecedence;
    [Write, Description("The Name parameter specifies the unique name for the message classification.")] String Name;
    [Write, Description("The PermissionMenuVisible parameter specifies whether the values that you entered for the DisplayName and RecipientDescription parameters are displayed in Outlook as the user composes a message. ")] Boolean PermissionMenuVisible;
    [Write, Description("The RecipientDescription parameter specifies the detailed text that's shown to Outlook recipient when they receive a message that has the message classification applied.")] String RecipientDescription;
    [Write, Description("The RetainClassificationEnabled parameter specifies whether the message classification should persist with the message if the message is forwarded or replied to.")] Boolean RetainClassificationEnabled ;
    [Write, Description("The SenderDescription parameter specifies the detailed text that's shown to Outlook senders when they select a message classification to apply to a message before they send the message. ")] String SenderDescription;
    [Write, Description("Specifies if this Outbound connector should exist."), ValueMap{"Present","Absent"}, Values{"Present","Absent"}] String Ensure;
    [Write, Description("Credentials of the Exchange Global Admin"), EmbeddedInstance("MSFT_Credential")] string Credential;
    [Write, Description("Id of the Azure Active Directory application to authenticate with.")] String ApplicationId;
    [Write, Description("Id of the Azure Active Directory tenant used for authentication.")] String TenantId;
    [Write, Description("Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication.")] String CertificateThumbprint;
    [Write, Description("Username can be made up to anything but password will be used for CertificatePassword"), EmbeddedInstance("MSFT_Credential")] String CertificatePassword;
    [Write, Description("Path to certificate used in service principal usually a PFX file.")] String CertificatePath;
    [Write, Description("Managed ID being used for authentication.")] Boolean ManagedIdentity;
};
