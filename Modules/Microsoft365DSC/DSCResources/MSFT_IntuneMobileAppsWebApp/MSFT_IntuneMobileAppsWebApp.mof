[ClassVersion("1.0.0"), FriendlyName("IntuneMobileAppsWebApp")]
class MSFT_IntuneMobileAppsWebApp : OMI_BaseResource
{
    [Key, Description("The admin provided or imported title of the app. Inherited from mobileApp.")] String DisplayName;
    [Write, Description("The unique identifier for an entity. Read-only. Inherited from mobileApp object.")] String Id;

    [Write, Description("The description of the app. Inherited from mobileApp.")] String Description;
    [Write, Description("The dewveloper of the app. Inherited from mobileApp.")] String Developer;
    [Write, Description("The InformationUrl of the app. Inherited from mobileApp.")] String InformationUrl;
    [Write, Description("The value indicating whether the app is marked as featured by the admin. Inherited from mobileApp.")] Boolean IsFeatured;
    [Write, Description("Notes for the app. Inherited from mobileApp.")] String Notes;
    [Write, Description("The owner of the app. Inherited from mobileApp.")] String Owner;
    [Write, Description("The privacy statement Url. Inherited from mobileApp.")] String PrivacyInformationUrl;
    [Write, Description("The publisher of the app. Inherited from mobileApp.")] String Publisher;
    [Write, Description("The publishing state for the app. The app cannot be assigned unless the app is published. Inherited from mobileApp."), ValueMap{"notPublished", "processing","published"}, Values{"notPublished", "processing", "published"}] String PublishingState;
    [Write, Description("List of Scope Tag IDs for mobile app.")] String RoleScopeTagIds[];
    [Write, Description("The list of categories for this app."), EmbeddedInstance("MSFT_DeviceManagementMobileAppCategory")] String Categories[];
    [Write, Description("The list of assignments for this app."), EmbeddedInstance("MSFT_DeviceManagementMobileAppAssignment")] String Assignments[];
    [Write, Description("The icon for this app."), EmbeddedInstance("MSFT_DeviceManagementMimeContent")] String LargeIcon;
    [Write, Description("The URL of the web app.")] String AppUrl;
    [Write, Description("The number of apps this app has superseded. Read-only.")] UInt32 SupersededAppCount;
    [Write, Description("The number of apps that supersede this app. Read-only.")] UInt32 SupersedingAppCount;
    [Write, Description("The number of apps that depend on this app. Read-only.")] UInt32 DependentAppCount;
    [Write, Description("Indicates whether the app is assigned to any groups.")] Boolean IsAssigned;
    [Write, Description("The current upload state of the app. Read-only.")] UInt32 UploadState;
    [Write, Description("The date and time the app was created. Read-only.")] DateTime CreatedDateTime;
    [Write, Description("The date and time the app was last modified. Read-only.")] DateTime LastModifiedDateTime;
    [Write, Description("Whether or not to use a managed browser for this app. Applicable only for Android and iOS.")] Boolean UseManagedBrowser;

    [Write, Description("Present ensures the policy exists, absent ensures it is removed."), ValueMap{"Present", "Absent"}, Values{"Present", "Absent"}] String Ensure;
    [Write, Description("Credentials of the Admin"), EmbeddedInstance("MSFT_Credential")] String Credential;
    [Write, Description("Id of the Azure Active Directory application to authenticate with.")] String ApplicationId;
    [Write, Description("Id of the Azure Active Directory tenant used for authentication.")] String TenantId;
    [Write, Description("Secret of the Azure Active Directory tenant used for authentication."), EmbeddedInstance("MSFT_Credential")] String ApplicationSecret;
    [Write, Description("Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication.")] String CertificateThumbprint;
    [Write, Description("Managed ID being used for authentication.")] Boolean ManagedIdentity;
    [Write, Description("Access token used for authentication.")] String AccessTokens[];
};

class MSFT_DeviceManagementMimeContent
{
    [Write, Description("Indicates the type of content mime.")] String type;
    [Write, Description("The byte array that contains the actual content.")] String value[];
};

class MSFT_DeviceManagementMobileAppCategory
{
    [Key, Description("The name of the app category.")] String displayName;
    [Write, Description("The unique identifier for an entity. Read-only.")] String id;
};

class MSFT_DeviceManagementMobileAppChildApp
{
    [Write, Description("The bundleId of the app.")] String bundleId;
    [Write, Description("The build number of the app.")] String buildNumber;
    [Write, Description("The version number of the app.")] String versionNumber;
};

class MSFT_DeviceManagementMobileAppAssignment
{
     [Write, Description("The type of the target assignment."),
        ValueMap{"#microsoft.graph.groupAssignmentTarget","#microsoft.graph.allLicensedUsersAssignmentTarget","#microsoft.graph.allDevicesAssignmentTarget","#microsoft.graph.exclusionGroupAssignmentTarget", "#microsoft.graph.mobileAppAssignment"},
        Values{"#microsoft.graph.groupAssignmentTarget","#microsoft.graph.allLicensedUsersAssignmentTarget","#microsoft.graph.allDevicesAssignmentTarget","#microsoft.graph.exclusionGroupAssignmentTarget", "#microsoft.graph.mobileAppAssignment"}]
        String dataType;

    [Write, Description("The Id of the filter for the target assignment.")] String deviceAndAppManagementAssignmentFilterId;
    [Write, Description("The type of filter of the target assignment i.e. Exclude or Include. Possible values are: none, include, exclude."),
        ValueMap{"none", "include", "exclude"},
        Values{"none", "include", "exclude"}]
        String deviceAndAppManagementAssignmentFilterType;

    [Write, Description("The group Id that is the target of the assignment.")] String groupId;
    [Write, Description("The group Display Name that is the target of the assignment.")] String groupDisplayName;

    [Write, Description("Possible values for the install intent chosen by the admin."),
        ValueMap{"available", "required", "uninstall", "availableWithoutEnrollment"},
        Values{"available", "required", "uninstall", "availableWithoutEnrollment"}]
        String intent;

    [Write, Description("The source of this assignment.")] String source;
};
