[ClassVersion("1.0.0.0"), FriendlyName("AADGroupsSettings")]
class MSFT_AADGroupsSettings : OMI_BaseResource
{
    [Key, Description("Only valid value is 'Yes'."), ValueMap{"Yes"}, Values{"Yes"}] String IsSingleInstance;
    [Write, Description("The flag indicating whether Office 365 group creation is allowed in the directory by non-admin users. This setting does not require an Azure Active Directory Premium P1 license.")] Boolean EnableGroupCreation;
    [Write, Description("Boolean indicating whether or not a guest user can be an owner of groups.")] Boolean AllowGuestsToBeGroupOwner;
    [Write, Description("Boolean indicating whether or not a guest user can have access to Office 365 groups content. This setting does not require an Azure Active Directory Premium P1 license.")] Boolean AllowGuestsToAccessGroups;
    [Write, Description("The url of a link to the guest usage guidelines.")] String GuestUsageGuidelinesUrl;
    [Write, Description("Name of the security group for which the members are allowed to create Office 365 groups even when EnableGroupCreation == false.")] String GroupCreationAllowedGroupName;
    [Write, Description("A boolean indicating whether or not is allowed to add guests to this directory.")] Boolean AllowToAddGuests;
    [Write, Description("A link to the Group Usage Guidelines.")] String UsageGuidelinesUrl;
    [Write, Description("Specify if the Azure AD Groups Naming Policy should exist or not."), ValueMap{"Present","Absent"}, Values{"Present","Absent"}] String Ensure;
    [Write, Description("Credentials of the Azure Active Directory Admin"), EmbeddedInstance("MSFT_Credential")] String GlobalAdminAccount;
    [Write, Description("Id of the Azure Active Directory application to authenticate with.")] String ApplicationId;
    [Write, Description("Id of the Azure Active Directory tenant used for authentication.")] String TenantId;
    [Write, Description("Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication.")] String CertificateThumbprint;
};
