[ClassVersion("1.0.0.0"), FriendlyName("EXOPartnerApplication")]
class MSFT_EXOPartnerApplication : OMI_BaseResource
{
    [Key, Description("The Name parameter specifies a new name for the partner application.")] String Name;
    [Write, Description("The ApplicationIdentifier parameter specifies a unique application identifier for the partner application that uses an authorization server.")] String ApplicationIdentifier;
    [Write, Description("The AcceptSecurityIdentifierInformation parameter specifies whether Exchange should accept security identifiers (SIDs) from another trusted Active Directory forest for the partner application.")] Boolean AcceptSecurityIdentifierInformation;
    [Write, Description("The AccountType parameter specifies the type of Microsoft account that's required for the partner application."), ValueMap{"OrganizationalAccount","ConsumerAccount"}, Values{"OrganizationalAccount","ConsumerAccount"}] String AccountType;
    [Write, Description("The Enabled parameter specifies whether the partner application is enabled.")] Boolean Enabled;
    [Write, Description("The LinkedAccount parameter specifies a linked Active Directory user account for the application.")] String LinkedAccount;
    [Write, Description("Specify if the Partner Application should exist or not."), ValueMap{"Present","Absent"}, Values{"Present","Absent"}] String Ensure;
    [Write, Description("Credentials of the Exchange Global Admin"), EmbeddedInstance("MSFT_Credential")] string Credential;
    [Write, Description("Id of the Azure Active Directory application to authenticate with.")] String ApplicationId;
    [Write, Description("Id of the Azure Active Directory tenant used for authentication.")] String TenantId;
    [Write, Description("Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication.")] String CertificateThumbprint;
    [Write, Description("Username can be made up to anything but password will be used for CertificatePassword"), EmbeddedInstance("MSFT_Credential")] String CertificatePassword;
    [Write, Description("Path to certificate used in service principal usually a PFX file.")] String CertificatePath;
    [Write, Description("Managed ID being used for authentication.")] Boolean ManagedIdentity;
};
