
[ClassVersion("1.0.0")]
class MSFT_AADEntitlementManagementConnectedOrganizationIdentitySource
{
    [Write, Description("Type of the identity source."), ValueMap{"#microsoft.graph.azureActiveDirectoryTenant","#microsoft.graph.crossCloudAzureActiveDirectoryTenant","#microsoft.graph.domainIdentitySource","#microsoft.graph.externalDomainFederation"}, Values{"#microsoft.graph.azureActiveDirectoryTenant","#microsoft.graph.crossCloudAzureActiveDirectoryTenant","#microsoft.graph.domainIdentitySource","#microsoft.graph.externalDomainFederation"}] String odataType;
    [Write, Description("The name of the Azure Active Directory tenant.")] String DisplayName;
    [Write, Description("The ID of the Azure Active Directory tenant.")] String tenantId;
    [Write, Description("The ID of the cloud where the tenant is located, one of microsoftonline.com, microsoftonline.us or partner.microsoftonline.cn.")] String CloudInstance;
    [Write, Description("The domain name.")] String DomainName;
    [Write, Description("The issuerURI of the incoming federation.")] String IssuerUri;
};

[ClassVersion("1.0.0.0"), FriendlyName("AADEntitlementManagementConnectedOrganization")]
class MSFT_AADEntitlementManagementConnectedOrganization : OMI_BaseResource
{
    [Key, Description("The display name of the connected organization.")] String DisplayName;
    [Write, Description("The Id of the Connected organization object.")] String Id;
    [Write, Description("The description of the connected organization.")] String Description;
    [Write, Description("The identity sources in this connected organization."), EmbeddedInstance("MSFT_AADEntitlementManagementConnectedOrganizationIdentitySource")] String IdentitySources[];
    [Write, Description("The state of a connected organization defines whether assignment policies with requestor scope type AllConfiguredConnectedOrganizationSubjects are applicable or not."), ValueMap{"configured","proposed","unknownFutureValue"}, Values{"configured","proposed","unknownFutureValue"}] String State;
    [Write, Description("Collection of objectID of extenal sponsors. the sponsor can be a user or a group.")] String ExternalSponsors[];
    [Write, Description("Collection of objectID of internal sponsors. the sponsor can be a user or a group.")] String InternalSponsors[];
    [Write, Description("Present ensures the policy exists, absent ensures it is removed."), ValueMap{"Present","Absent"}, Values{"Present","Absent"}] string Ensure;
    [Write, Description("Credentials of the Intune Admin"), EmbeddedInstance("MSFT_Credential")] string Credential;
    [Write, Description("Id of the Azure Active Directory application to authenticate with.")] String ApplicationId;
    [Write, Description("Id of the Azure Active Directory tenant used for authentication.")] String TenantId;
    [Write, Description("Secret of the Azure Active Directory tenant used for authentication."), EmbeddedInstance("MSFT_Credential")] String ApplicationSecret;
    [Write, Description("Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication.")] String CertificateThumbprint;
    [Write, Description("Managed ID being used for authentication.")] Boolean ManagedIdentity;
};
