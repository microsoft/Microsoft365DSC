[ClassVersion("1.0.0.0")]
class MSFT_DeviceManagementConfigurationPolicyAssignments
{
    [Write, Description("The type of the target assignment."), ValueMap{"#microsoft.graph.groupAssignmentTarget","#microsoft.graph.allLicensedUsersAssignmentTarget","#microsoft.graph.allDevicesAssignmentTarget","#microsoft.graph.exclusionGroupAssignmentTarget","#microsoft.graph.configurationManagerCollectionAssignmentTarget"}, Values{"#microsoft.graph.groupAssignmentTarget","#microsoft.graph.allLicensedUsersAssignmentTarget","#microsoft.graph.allDevicesAssignmentTarget","#microsoft.graph.exclusionGroupAssignmentTarget","#microsoft.graph.configurationManagerCollectionAssignmentTarget"}] String dataType;
    [Write, Description("The type of filter of the target assignment i.e. Exclude or Include. Possible values are:none, include, exclude."), ValueMap{"none","include","exclude"}, Values{"none","include","exclude"}] String deviceAndAppManagementAssignmentFilterType;
    [Write, Description("The Id of the filter for the target assignment.")] String deviceAndAppManagementAssignmentFilterId;
    [Write, Description("The group Id that is the target of the assignment.")] String groupId;
    [Write, Description("The collection Id that is the target of the assignment.(ConfigMgr)")] String collectionId;
};
[ClassVersion("1.0.0")]
class MSFT_MicrosoftGraphapplistitem
{
    [Write, Description("odatatype of the item."), ValueMap{"#microsoft.graph.appleAppListItem"}, Values{"#microsoft.graph.appleAppListItem"}] String odataType;
    [Write, Description("Kiosk mode managed app id")] String appId;
    [Write, Description("Define the app store URL.")] String appStoreUrl;
    [Write, Description("Define the name of the app.")] String name;
    [Write, Description("Define the publisher of the app.")] String publisher;
};

[ClassVersion("1.0.0.0"), FriendlyName("IntuneDeviceConfigurationPolicyAndroidDeviceAdministrator")]
class MSFT_IntuneDeviceConfigurationPolicyAndroidDeviceAdministrator : OMI_BaseResource
{
    [Write, Description("Id of the Intune policy.")] String Id;
    [Write, Description("Description of the Intune policy.")] String Description;
    [Write, Description("Display name of the Intune policy.")] String DisplayName;
    [Write, Description("Block clipboard sharing between apps (Samsung KNOX Standard 4.0+).")] Boolean AppsBlockClipboardSharing;
    [Write, Description("Block copy and paste functionality.")] Boolean AppsBlockCopyPaste;
    [Write, Description("Block YouTube (Samsung KNOX Standard 4.0+).")] Boolean AppsBlockYouTube;
    [Write, Description("Specify the apps that will be hidden on the device. Users cannot discover or run these apps."), EmbeddedInstance("MSFT_MicrosoftGraphapplistitem")] String AppsHideList[];
    [Write, Description("Specify the apps that users can install. Users will not be able to install apps that are not on the list."), EmbeddedInstance("MSFT_MicrosoftGraphapplistitem")] String AppsInstallAllowList[];
    [Write, Description("Specify the apps that users cannot run on their device."), EmbeddedInstance("MSFT_MicrosoftGraphapplistitem")] String AppsLaunchBlockList[];
    [Write, Description("Block Bluetooth (Samsung KNOX Standard 4.0+).")] Boolean BluetoothBlocked;
    [Write, Description("Block use of camera")] Boolean CameraBlocked;
    [Write, Description("Block data roaming over the cellular network (Samsung KNOX Standard 4.0+).")] Boolean CellularBlockDataRoaming;
    [Write, Description("Block SMS/MMS messaging functionality (Samsung KNOX Standard 4.0+).")] Boolean CellularBlockMessaging;
    [Write, Description("Block voice roaming over the cellular network (Samsung KNOX Standard 4.0+).")] Boolean CellularBlockVoiceRoaming;
    [Write, Description("Block Wi-Fi tethering (Samsung KNOX Standard 4.0+).")] Boolean CellularBlockWiFiTethering;
    [Write, Description("Device compliance can be viewed in the Restricted Apps Compliance report."), ValueMap{"none","appsInListCompliant","appsNotInListCompliant"}, Values{"none","appsInListCompliant","appsNotInListCompliant"}] String CompliantAppListType;
    [Write, Description("Enter the Google Play Store URL of the app you want. For example, to specify the Microsoft Remote Desktop app for Android, enter https://play.google.com/store/apps/details?id=com.microsoft.rdc.android. To find the URL of an app, use a search engine to locate the store page. For example, to find the Remote Desktop app, you could search Microsoft Remote Desktop Play Store."), EmbeddedInstance("MSFT_MicrosoftGraphapplistitem")] String CompliantAppsList[];
    [Write, Description("Block user from changing date and time on device (Samsung KNOX).")] Boolean DateAndTimeBlockChanges;
    [Write, Description("Allow multiple users to log into the Company Portal using their AAD credentials (Samsung KNOX Standard 4.0+).")] Boolean DeviceSharingAllowed;
    [Write, Description("Block submitting diagnostic data from device.")] Boolean DiagnosticDataBlockSubmission;
    [Write, Description("Block factory reset on device.")] Boolean FactoryResetBlocked;
    [Write, Description("Block Google account auto sync functionality on device.")] Boolean GoogleAccountBlockAutoSync;
    [Write, Description("Block Google Play store (Samsung KNOX Standard 4.0+).")] Boolean GooglePlayStoreBlocked;
    [Write, Description("Kiosk mode apps"), EmbeddedInstance("MSFT_MicrosoftGraphapplistitem")] String KioskModeApps[];
    [Write, Description("Kiosk mode block sleep button")] Boolean KioskModeBlockSleepButton;
    [Write, Description("Kiosk mode block volume buttons")] Boolean KioskModeBlockVolumeButtons;
    [Write, Description("Location services blocked")] Boolean LocationServicesBlocked;
    [Write, Description("Block Near Field Communication (NFC) technology (Samsung KNOX Standard 4.0+).")] Boolean NfcBlocked;
    [Write, Description("Block using fingerprint to unlock device.")] Boolean PasswordBlockFingerprintUnlock;
    [Write, Description("Block Smart Lock or other trust agents from adjusting lock screen settings (Samsung KNOX Standard 5.0+).")] Boolean PasswordBlockTrustAgents;
    [Write, Description("Number of days until device password must be changed. (1-365)")] UInt32 PasswordExpirationDays;
    [Write, Description("Minimum number of digits or characters in password. (4-16)")] UInt32 PasswordMinimumLength;
    [Write, Description("Maximum minutes of inactivity until screen locks. Ignored by device if new time is longer than what's currently set on device. If set to Immediately, devices will use the minimum possible value per device.")] UInt32 PasswordMinutesOfInactivityBeforeScreenTimeout;
    [Write, Description("Number of new passwords that must be used until an old one can be reused.")] UInt32 PasswordPreviousPasswordBlockCount;
    [Write, Description("Require password to access device.")] Boolean PasswordRequired;
    [Write, Description("Specify the type of password required."), ValueMap{"deviceDefault","alphabetic","alphanumeric","alphanumericWithSymbols","lowSecurityBiometric","numeric","numericComplex","any"}, Values{"deviceDefault","alphabetic","alphanumeric","alphanumericWithSymbols","lowSecurityBiometric","numeric","numericComplex","any"}] String PasswordRequiredType;
    [Write, Description("Number of consecutive times an incorrect password can be entered before device is wiped of all data.")] UInt32 PasswordSignInFailureCountBeforeFactoryReset;
    [Write, Description("Block user from powering off device. If this setting is disabled the setting 'Number of sign-in failures before wiping device' does not function.")] Boolean PowerOffBlocked;
    [Write, Description("Define the password complexity."), ValueMap{"none","low","medium","high"}, Values{"none","low","medium","high"}] String RequiredPasswordComplexity;
    [Write, Description("Block capturing contents of screen as an image.")] Boolean ScreenCaptureBlocked;
    [Write, Description("Security require verify apps")] Boolean SecurityRequireVerifyApps;
    [Write, Description("Block sync with Google backup.")] Boolean StorageBlockGoogleBackup;
    [Write, Description("Block removable storage usage (Samsung KNOX Standard 4.0+).")] Boolean StorageBlockRemovableStorage;
    [Write, Description("Require encryption on device. Not all devices support encryption.")] Boolean StorageRequireDeviceEncryption;
    [Write, Description("Storage cards must be encrypted. Not all devices support storage card encryption. For more information, see the device and mobile operating system documentation.")] Boolean StorageRequireRemovableStorageEncryption;
    [Write, Description("Block voice assistant (Samsung KNOX Standard 4.0+).")] Boolean VoiceAssistantBlocked;
    [Write, Description("Block voice dialing (Samsung KNOX Standard 4.0+).")] Boolean VoiceDialingBlocked;
    [Write, Description("Block autofill.")] Boolean WebBrowserBlockAutofill;
    [Write, Description("Block web browser on device.")] Boolean WebBrowserBlocked;
    [Write, Description("Block JavaScript in the browser.")] Boolean WebBrowserBlockJavaScript;
    [Write, Description("Block pop-ups in web browser.")] Boolean WebBrowserBlockPopups;
    [Write, Description("Allow or block browser cookies"), ValueMap{"browserDefault","blockAlways","allowCurrentWebSite","allowFromWebsitesVisited","allowAlways"}, Values{"browserDefault","blockAlways","allowCurrentWebSite","allowFromWebsitesVisited","allowAlways"}] String WebBrowserCookieSettings;
    [Write, Description("Block Wi-Fi (Samsung KNOX Standard 4.0+).")] Boolean WiFiBlocked;
    [Write, Description("Represents the assignment to the Intune policy."), EmbeddedInstance("MSFT_DeviceManagementConfigurationPolicyAssignments")] String Assignments[];
    [Write, Description("Present ensures the policy exists, absent ensures it is removed."), ValueMap{"Present","Absent"}, Values{"Present","Absent"}] string Ensure;
    [Write, Description("Credentials of the Intune Admin"), EmbeddedInstance("MSFT_Credential")] string Credential;
    [Write, Description("Id of the Azure Active Directory application to authenticate with.")] String ApplicationId;
    [Write, Description("Id of the Azure Active Directory tenant used for authentication.")] String TenantId;
    [Write, Description("Secret of the Azure Active Directory tenant used for authentication.")] String ApplicationSecret;
    [Write, Description("Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication.")] String CertificateThumbprint;
};
