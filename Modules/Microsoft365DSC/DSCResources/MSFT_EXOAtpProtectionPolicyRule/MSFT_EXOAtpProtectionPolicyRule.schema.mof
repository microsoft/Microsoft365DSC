[ClassVersion("1.0.0.0"), FriendlyName("EXOAtpProtectionPolicyRule")]
class MSFT_EXOAtpProtectionPolicyRule : OMI_BaseResource
{
    [Key, Description("Identifier for the rule")] String Identity;
    [Write, Description("Specifies whether the rule is enabled")] Boolean Enabled;
    [Write, Description("Informative comments for the rule, such as what the rule is used for or how it has changed over time. The length of the comment can't exceed 1024 characters.")] String Comments;
    [Write, Description("Specifies an exception that looks for recipients with email addresses in the specified domains.")] String ExceptIfRecipientDomainIs[];
    [Write, Description("Specifies an exception that looks for recipients in messages. You can use any value that uniquely identifies the recipient")] String ExceptIfSentTo[];
    [Write, Description("Specifies an exception that looks for messages sent to members of groups. You can use any value that uniquely identifies the group.")] String ExceptIfSentToMemberOf[];
    [Write, Description("Unique name for the rule. The maximum length is 64 characters.")] String Name;
    [Write, Description("Specifies a priority value for the rule that determines the order of rule processing. A lower integer value indicates a higher priority, the value 0 is the highest priority, and rules can't have the same priority value.")] UInt32 Priority;
    [Write, Description("Specifies a condition that looks for recipients with email addresses in the specified domains.")] String RecipientDomainIs[];
    [Write, Description("Specifies the existing Safe Attachments policy that's associated with the preset security policy.")] String SafeAttachmentPolicy;
    [Write, Description("Specifies the existing Safe Links policy that's associated with the preset security policy.")] String SafeLinksPolicy;
    [Write, Description("Specifies a condition that looks for recipients in messages. You can use any value that uniquely identifies the recipient.")] String SentTo[];
    [Write, Description("Specifies a condition that looks for messages sent to members of distribution groups, dynamic distribution groups, or mail-enabled security groups. ")] String SentToMemberOf[];

    [Write, Description("Present ensures the instance exists, absent ensures it is removed."), ValueMap{"Present", "Absent"}, Values{"Present", "Absent"}] string Ensure;
    [Write, Description("Credentials of the workload's Admin"), EmbeddedInstance("MSFT_Credential")] string Credential;
    [Write, Description("Id of the Azure Active Directory application to authenticate with.")] String ApplicationId;
    [Write, Description("Id of the Azure Active Directory tenant used for authentication.")] String TenantId;
    [Write, Description("Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication.")] String CertificateThumbprint;
    [Write, Description("Managed ID being used for authentication.")] Boolean ManagedIdentity;
    [Write, Description("Access token used for authentication.")] String AccessTokens[];
};
