[ClassVersion("1.0.0.0"), FriendlyName("TeamsMeetingBroadcastPolicy")]
class MSFT_TeamsMeetingBroadcastPolicy : OMI_BaseResource
{
    [Key, Description("The identifier of the Teams Meeting Broadcast Policy.")] string Identity;
    [Write, Description("Specifies whether this user can create broadcast events in Teams. This settng impacts broadcasts that use both self-service and external encoder production methods.")] Boolean AllowBroadcastScheduling;
    [Write, Description("Specifies whether real-time transcription and translation can be enabled in the broadcast event. Note: this setting is applicable to broadcast events that use Teams Meeting production only and does not apply when external encoder is used as production method.")] Boolean AllowBroadcastTranscription;
    [Write, Description("Specifies the attendee visibility mode of the broadcast events created by this user.  This setting controls who can watch the broadcast event - e.g. anyone can watch this event including anonymous users or only authenticated users in my company can watch the event.  Note: this setting is applicable to broadcast events that use Teams Meeting production only and does not apply when external encoder is used as production method."), ValueMap{"Everyone","EveryoneInCompany","InvitedUsersInCompany","EveryoneInCompanyAndExternal","InvitedUsersInCompanyAndExternal"}, Values{"Everyone","EveryoneInCompany","InvitedUsersInCompany","EveryoneInCompanyAndExternal","InvitedUsersInCompanyAndExternal"}] String BroadcastAttendeeVisibilityMode;
    [Write, Description("Specifies whether broadcast events created by this user are always recorded, never recorded or user can choose whether to record or not. Note: this setting is applicable to broadcast events that use Teams Meeting production only and does not apply when external encoder is used as production method."), ValueMap{"AlwaysEnabled","AlwaysDisabled","UserOverride"}, Values{"AlwaysEnabled","AlwaysDisabled","UserOverride"}] String BroadcastRecordingMode;
    [Write, Description("Present ensures the Policy exists, absent ensures it is removed"), ValueMap{"Present","Absent"}, Values{"Present","Absent"}] String Ensure;
    [Required, Description("Credentials of the SharePoint Global Admin"), EmbeddedInstance("MSFT_Credential")] String GlobalAdminAccount;
};

