[ClassVersion("1.0.0.0")]
class MSFT_DeviceManagementConfigurationPolicyAssignments
{
    [Write, Description("The type of the target assignment."), ValueMap{"#microsoft.graph.groupAssignmentTarget","#microsoft.graph.allLicensedUsersAssignmentTarget","#microsoft.graph.allDevicesAssignmentTarget","#microsoft.graph.exclusionGroupAssignmentTarget","#microsoft.graph.configurationManagerCollectionAssignmentTarget"}, Values{"#microsoft.graph.groupAssignmentTarget","#microsoft.graph.allLicensedUsersAssignmentTarget","#microsoft.graph.allDevicesAssignmentTarget","#microsoft.graph.exclusionGroupAssignmentTarget","#microsoft.graph.configurationManagerCollectionAssignmentTarget"}] String dataType;
    [Write, Description("The type of filter of the target assignment i.e. Exclude or Include. Possible values are:none, include, exclude."), ValueMap{"none","include","exclude"}, Values{"none","include","exclude"}] String deviceAndAppManagementAssignmentFilterType;
    [Write, Description("The Id of the filter for the target assignment.")] String deviceAndAppManagementAssignmentFilterId;
    [Write, Description("The group Id that is the target of the assignment.")] String groupId;
    [Write, Description("The collection Id that is the target of the assignment.(ConfigMgr)")] String collectionId;
};

[ClassVersion("1.0.0.0"), FriendlyName("IntuneDeviceConfigurationEditionUpgradePolicyWindows10")]
class MSFT_IntuneDeviceConfigurationEditionUpgradePolicyWindows10 : OMI_BaseResource
{
    [Write, Description("Edition Upgrade License File Content.")] String License;
    [Write, Description("Edition Upgrade License Type. Possible values are: productKey, licenseFile, notConfigured."), ValueMap{"productKey","licenseFile","notConfigured"}, Values{"productKey","licenseFile","notConfigured"}] String LicenseType;
    [Write, Description("Edition Upgrade Product Key.")] String ProductKey;
    [Write, Description("Edition Upgrade Target Edition. Possible values are: windows10Enterprise, windows10EnterpriseN, windows10Education, windows10EducationN, windows10MobileEnterprise, windows10HolographicEnterprise, windows10Professional, windows10ProfessionalN, windows10ProfessionalEducation, windows10ProfessionalEducationN, windows10ProfessionalWorkstation, windows10ProfessionalWorkstationN, notConfigured, windows10Home, windows10HomeChina, windows10HomeN, windows10HomeSingleLanguage, windows10Mobile, windows10IoTCore, windows10IoTCoreCommercial."), ValueMap{"windows10Enterprise","windows10EnterpriseN","windows10Education","windows10EducationN","windows10MobileEnterprise","windows10HolographicEnterprise","windows10Professional","windows10ProfessionalN","windows10ProfessionalEducation","windows10ProfessionalEducationN","windows10ProfessionalWorkstation","windows10ProfessionalWorkstationN","notConfigured","windows10Home","windows10HomeChina","windows10HomeN","windows10HomeSingleLanguage","windows10Mobile","windows10IoTCore","windows10IoTCoreCommercial"}, Values{"windows10Enterprise","windows10EnterpriseN","windows10Education","windows10EducationN","windows10MobileEnterprise","windows10HolographicEnterprise","windows10Professional","windows10ProfessionalN","windows10ProfessionalEducation","windows10ProfessionalEducationN","windows10ProfessionalWorkstation","windows10ProfessionalWorkstationN","notConfigured","windows10Home","windows10HomeChina","windows10HomeN","windows10HomeSingleLanguage","windows10Mobile","windows10IoTCore","windows10IoTCoreCommercial"}] String TargetEdition;
    [Write, Description("S mode configuration. Possible values are: noRestriction, block, unlock."), ValueMap{"noRestriction","block","unlock"}, Values{"noRestriction","block","unlock"}] String WindowsSMode;
    [Write, Description("Admin provided description of the Device Configuration.")] String Description;
    [Required, Description("Admin provided name of the device configuration.")] String DisplayName;
    [Key, Description("The unique identifier for an entity. Read-only.")] String Id;
    [Write, Description("Represents the assignment to the Intune policy."), EmbeddedInstance("MSFT_DeviceManagementConfigurationPolicyAssignments")] String Assignments[];
    [Write, Description("Present ensures the policy exists, absent ensures it is removed."), ValueMap{"Present","Absent"}, Values{"Present","Absent"}] string Ensure;
    [Write, Description("Credentials of the Admin"), EmbeddedInstance("MSFT_Credential")] string Credential;
    [Write, Description("Id of the Azure Active Directory application to authenticate with.")] String ApplicationId;
    [Write, Description("Id of the Azure Active Directory tenant used for authentication.")] String TenantId;
    [Write, Description("Secret of the Azure Active Directory tenant used for authentication."), EmbeddedInstance("MSFT_Credential")] String ApplicationSecret;
    [Write, Description("Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication.")] String CertificateThumbprint;
	[Write, Description("Managed ID being used for authentication.")] Boolean ManagedIdentity;
};
