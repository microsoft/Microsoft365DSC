[ClassVersion("1.0.0")]
class MSFT_MicrosoftGraphCertificateAuthority
{
    [Write, Description("Required. The base64 encoded string representing the public certificate.")] String Certificate;
    [Write, Description("The URL of the certificate revocation list.")] String CertificateRevocationListUrl;
    [Write, Description("The URL contains the list of all revoked certificates since the last time a full certificate revocaton list was created.")] String DeltaCertificateRevocationListUrl;
    [Write, Description("Required. true if the trusted certificate is a root authority, false if the trusted certificate is an intermediate authority.")] Boolean IsRootAuthority;
};

[ClassVersion("1.0.0.0"), FriendlyName("AADOrganizationCertificateBasedAuthConfiguration")]
class MSFT_AADOrganizationCertificateBasedAuthConfiguration : OMI_BaseResource
{
    [Write, Description("Collection of certificate authorities which creates a trusted certificate chain."), EmbeddedInstance("MSFT_MicrosoftGraphcertificateAuthority")] String CertificateAuthorities[];
    [Key, Description("The Organization ID. Read-only.")] String OrganizationId;
    [Write, Description("Present ensures the policy exists, absent ensures it is removed."), ValueMap{"Present","Absent"}, Values{"Present","Absent"}] string Ensure;
    [Write, Description("Credentials of the Admin"), EmbeddedInstance("MSFT_Credential")] string Credential;
    [Write, Description("Id of the Azure Active Directory application to authenticate with.")] String ApplicationId;
    [Write, Description("Id of the Azure Active Directory tenant used for authentication.")] String TenantId;
    [Write, Description("Secret of the Azure Active Directory tenant used for authentication."), EmbeddedInstance("MSFT_Credential")] String ApplicationSecret;
    [Write, Description("Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication.")] String CertificateThumbprint;
    [Write, Description("Managed ID being used for authentication.")] Boolean ManagedIdentity;
    [Write, Description("Access token used for authentication.")] String AccessTokens[];
};
