[ClassVersion("1.0.0.0"), FriendlyName("TeamsMessagingPolicy")]
class MSFT_TeamsMessagingPolicy : OMI_BaseResource
{
    [Key, Description("Identity for the teams messaging policy you're modifying. To modify the global policy, use this syntax: -Identity global. To modify a per-user policy, use syntax similar to this: -Identity TeamsMessagingPolicy.")] string Identity;
    [Write, Description("Determines whether a user is allowed to access and post Giphys. Set this to TRUE to allow. Set this FALSE to prohibit.")] boolean AllowGiphy;
    [Write, Description("Determines whether a user is allowed to access and post memes. Set this to TRUE to allow. Set this FALSE to prohibit.")] boolean AllowMemes;
    [Write, Description("Determines whether owners are allowed to delete all the messages in their team. Set this to TRUE to allow. Set this to FALSE to prohibit.")] boolean AllowOwnerDeleteMessage;
    [Write, Description("Determines whether a user is allowed to access and post stickers. Set this to TRUE to allow. Set this FALSE to prohibit.")] boolean AllowStickers;
    [Write, Description("Use this setting to turn automatic URL previewing on or off in messages. Set this to TRUE to turn on. Set this to FALSE to turn off.")] boolean AllowUrlPreviews;
    [Write, Description("Determines whether a user is allowed to chat. Set this to TRUE to allow a user to chat across private chat, group chat and in meetings. Set this to FALSE to prohibit all chat.")] boolean AllowUserChat;
    [Write, Description("Determines whether a user is allowed to delete their own messages. Set this to TRUE to allow. Set this to FALSE to prohibit.")] boolean AllowUserDeleteMessage;
    [Write, Description("Determines whether a user is allowed to translate messages to their client languages. Set this to TRUE to allow. Set this to FALSE to prohibit.")] boolean AllowUserTranslation;
    [Write, Description("Determines whether a user is allowed to use Immersive Reader for reading conversation messages. Set this to TRUE to allow. Set this FALSE to prohibit.")] boolean AllowImmersiveReader;
    [Write, Description("Determines whether a user is allowed to remove a user from a conversation. Set this to TRUE to allow. Set this FALSE to prohibit.")] boolean AllowRemoveUser;
    [Write, Description("Determines whether a user is allowed to send priorities messages. Set this to TRUE to allow. Set this FALSE to prohibit.")] boolean AllowPriorityMessages;
    [Write, Description("Provide a description of your policy to identify purpose of creating it.")] string Description;
    [Write, Description("Determines the Giphy content restrictions applicable to a user. Set this to STRICT, MODERATE or NORESTRICTION."),ValueMap{"STRICT","MODERATE","NORESTRICTION"}, Values{"STRICT","MODERATE","NORESTRICTION"}] string GiphyRatingType;
    [Write, Description("Use this setting to specify whether read receipts are user controlled, enabled for everyone, or disabled. Set this to UserPreference, Everyone or None."),ValueMap{"UserPreference","Everyone","None"}, Values{"UserPreference","Everyone","None"}] string ReadReceiptsEnabledType;
    [Write, Description("Possible values are: DisabledUserOverride,EnabledUserOverride."),ValueMap{"DisabledUserOverride","EnabledUserOverride"}, Values{"DisabledUserOverride","EnabledUserOverride"}] string ChannelsInChatListEnabledType;
    [Write, Description("Determines whether a user is allowed to send audio messages. Possible values are: ChatsAndChannels,ChatsOnly,Disabled."),ValueMap{"ChatsAndChannels","ChatsOnly","Disabled"}, Values{"ChatsAndChannels","ChatsOnly","Disabled"}] string AudioMessageEnabledType;
    [Write, Description("Globally unique identifier (GUID) of the tenant account whose external user communication policy are being created.")] string Tenant;
    [Write, Description("Present ensures the Team Message Policy exists, absent ensures it is removed"), ValueMap{"Present","Absent"}, Values{"Present","Absent"}] String Ensure;
    [Required, Description("Credentials of the Teams Service Admin"), EmbeddedInstance("MSFT_Credential")] String GlobalAdminAccount;
};

