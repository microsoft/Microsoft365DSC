class MSFT_DeviceManagementMobileAppAssignment
{
    [Write, Description("The type of the target assignment."), ValueMap{"#microsoft.graph.groupAssignmentTarget","#microsoft.graph.allLicensedUsersAssignmentTarget","#microsoft.graph.allDevicesAssignmentTarget","#microsoft.graph.exclusionGroupAssignmentTarget", "#microsoft.graph.mobileAppAssignment"}, Values{"#microsoft.graph.groupAssignmentTarget","#microsoft.graph.allLicensedUsersAssignmentTarget","#microsoft.graph.allDevicesAssignmentTarget","#microsoft.graph.exclusionGroupAssignmentTarget", "#microsoft.graph.mobileAppAssignment"}] String dataType;
    [Write, Description("The Id of the filter for the target assignment.")] String deviceAndAppManagementAssignmentFilterId;
    [Write, Description("The type of filter of the target assignment i.e. Exclude or Include. Possible values are: none, include, exclude."), ValueMap{"none", "include", "exclude"}, Values{"none", "include", "exclude"}] String deviceAndAppManagementAssignmentFilterType;
    [Write, Description("The group Id that is the target of the assignment.")] String groupId;
    [Write, Description("The group Display Name that is the target of the assignment.")] String groupDisplayName;
    [Write, Description("Possible values for the install intent chosen by the admin."), ValueMap{"available", "required", "uninstall", "availableWithoutEnrollment"}, Values{"available", "required", "uninstall", "availableWithoutEnrollment"}] String intent;
};

class MSFT_DeviceManagementMinimumOperatingSystem
{
    [Write, Description("Indicates if Mac OS X 10.7 or later is required to install the app.")] Boolean v10_7;
    [Write, Description("Indicates if Mac OS X 10.8 or later is required to install the app.")] Boolean v10_8;
    [Write, Description("Indicates if Mac OS X 10.9 or later is required to install the app.")] Boolean v10_9;
    [Write, Description("Indicates if Mac OS X 10.10 or later is required to install the app.")] Boolean v10_10;
    [Write, Description("Indicates if Mac OS X 10.11 or later is required to install the app.")] Boolean v10_11;
    [Write, Description("Indicates if Mac OS X 10.12 or later is required to install the app.")] Boolean v10_12;
    [Write, Description("Indicates if Mac OS X 10.13 or later is required to install the app.")] Boolean v10_13;
    [Write, Description("Indicates if Mac OS X 10.14 or later is required to install the app.")] Boolean v10_14;
    [Write, Description("Indicates if Mac OS X 10.15 or later is required to install the app.")] Boolean v10_15;
    [Write, Description("Indicates if Mac OS X 11.0 or later is required to install the app.")] Boolean v11_0;
    [Write, Description("Indicates if Mac OS X 12.0 or later is required to install the app.")] Boolean v12_0;
    [Write, Description("Indicates if Mac OS X 13.0 or later is required to install the app.")] Boolean v13_0;
    [Write, Description("Indicates if Mac OS X 14.0 or later is required to install the app.")] Boolean v14_0;
};

class MSFT_DeviceManagementMimeContent
{
    [Write, Description("Indicates the type of content mime.")] String Type;
    [Write, Description("The Base64 encoded string content.")] String Value;
};

class MSFT_DeviceManagementMobileAppCategory
{
    [Key, Description("The name of the app category.")] String DisplayName;
    [Write, Description("The unique identifier for an entity. Read-only.")] String Id;
};

class MSFT_DeviceManagementMobileAppChildApp
{
    [Write, Description("The bundleId of the app.")] String BundleId;
    [Write, Description("The build number of the app.")] String BuildNumber;
    [Write, Description("The version number of the app.")] String VersionNumber;
};

[ClassVersion("1.0.0.0"), FriendlyName("IntuneMobileAppsMacOSLobApp")]
class MSFT_IntuneMobileAppsMacOSLobApp : OMI_BaseResource
{
    [Key, Description("The admin provided or imported title of the app. Inherited from mobileApp.")] String DisplayName;
    [Write, Description("The unique identifier for an entity. Read-only. Inherited from mobileApp object.")] String Id;
    [Write, Description("The description of the app. Inherited from mobileApp.")] String Description;
    [Write, Description("The dewveloper of the app. Inherited from mobileApp.")] String Developer;
    [Write, Description("The InformationUrl of the app. Inherited from mobileApp.")] String InformationUrl;
    [Write, Description("The value indicating whether the app is marked as featured by the admin. Inherited from mobileApp.")] Boolean IsFeatured;
    [Write, Description("Notes for the app. Inherited from mobileApp.")] String Notes;
    [Write, Description("The owner of the app. Inherited from mobileApp.")] String Owner;
    [Write, Description("The privacy statement Url. Inherited from mobileApp.")] String PrivacyInformationUrl;
    [Write, Description("The publisher of the app. Inherited from mobileApp.")] String Publisher;
    [Write, Description("The bundleId of the app.")] String BundleId;
    [Write, Description("The build number of the app.")] String BuildNumber;
    [Write, Description("The version number of the app.")] String VersionNumber;
    [Write, Description("List of Scope Tag IDs for mobile app.")] String RoleScopeTagIds[];
    [Write, Description("Whether to ignore the version of the app or not.")] Boolean IgnoreVersionDetection;
    [Write, Description("Install the app as managed. Requires macOS 11.0.")] Boolean InstallAsManaged;
    [Write, Description("The icon for this app."), EmbeddedInstance("MSFT_DeviceManagementMimeContent")] String LargeIcon;
    [Write, Description("The minimum supported operating system to install the app."), EmbeddedInstance("MSFT_DeviceManagementMinimumOperatingSystem")] String MinimumSupportedOperatingSystem;
    [Write, Description("The list of categories for this app."), EmbeddedInstance("MSFT_DeviceManagementMobileAppCategory")] String Categories[];
    [Write, Description("The list of assignments for this app."), EmbeddedInstance("MSFT_DeviceManagementMobileAppAssignment")] String Assignments[];
    [Write, Description("The list of child apps for this app package."), EmbeddedInstance("MSFT_DeviceManagementMobileAppChildApp")] String ChildApps[];
    [Write, Description("Present ensures the policy exists, absent ensures it is removed."), ValueMap{"Present", "Absent"}, Values{"Present", "Absent"}] String Ensure;
    [Write, Description("Credentials of the Admin"), EmbeddedInstance("MSFT_Credential")] String Credential;
    [Write, Description("Id of the Azure Active Directory application to authenticate with.")] String ApplicationId;
    [Write, Description("Id of the Azure Active Directory tenant used for authentication.")] String TenantId;
    [Write, Description("Secret of the Azure Active Directory tenant used for authentication."), EmbeddedInstance("MSFT_Credential")] String ApplicationSecret;
    [Write, Description("Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication.")] String CertificateThumbprint;
    [Write, Description("Managed ID being used for authentication.")] Boolean ManagedIdentity;
    [Write, Description("Access token used for authentication.")] String AccessTokens[];
};
